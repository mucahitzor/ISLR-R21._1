ggplot() + aes(x=z, fill =z) + geom_bar(color = "black", width = 0.4) +
geom_text(
aes(
y = after_stat(count),
label = after_stat(count),
color = z), stat = "count", size =6, face = "bold"
) + theme_ipsum_pub() + scale_fill_ipsum()
data %>%
ggplot() + aes(x=z, fill =z) + geom_bar(color = "black", width = 0.4) +
geom_text(
aes(
y = after_stat(count + 2),
label = after_stat(count),
color = z), stat = "count", size =6, face = "bold"
) + theme_ipsum_pub() + scale_fill_ipsum()
ggplot(data, aes(z,fill=z)) +
geom_bar() +
geom_text(
aes(
y = after_stat(count + 2),
label = after_stat(count)
),
stat = "count"
) -> p2
data %>%
ggplot() + aes(x=z, fill =z) + geom_bar(color = "black", width = 0.4) +
geom_text(
aes(
y = after_stat(count + 2),
label = after_stat(count),
color = z), stat = "count", size =6, face = "bold"
) + theme_ipsum_pub() + scale_fill_ipsum()  -> p1
(p1 | p2) / p2
p2
data %>%
ggplot() + aes(x=z, fill =z) + geom_bar(color = "black", width = 0.4) +
geom_text(
aes(
y = after_stat(count + 2),
label = after_stat(count),
color = z), stat = "count", size =6, face = "bold"
) + theme_ipsum_pub() + scale_fill_ipsum()  -> p1
data %>%
ggplot() + aes(x=z, fill =z) + geom_bar(color = "black", width = 0.4) +
geom_text(
aes(
y = after_stat(count + 2),
label = after_stat(count),
color = z), stat = "count", size =6, face = "bold"
) + theme_ipsum_pub() + scale_fill_ipsum()  -> p1
(p1 | p2) / p2
data = tibble(
x = rnorm(100,mean = 10, sd = 3),
y = 41 + x + rnorm(100, mean = 0, sd = 1),
z = sample(c("A","B","C","D"),100,T)
)
data %>%
ggplot() + aes(x=x,y=y, color =z) + geom_point(size=2, alpha=0.6) +
geom_smooth(se=F)+
labs(title = "Capturing the essence of Linear Regression", subtitle = "What about the error terms?")+ theme_ipsum_tw() + theme(axis.line = element_line(color="black")) + scale_color_ipsum() -> p1
data %>%
ggplot() + aes(x=z, fill =z) + geom_bar(color = "black", width = 0.4) +
geom_text(
aes(
y = after_stat(count + 2),
label = after_stat(count),
color = z), stat = "count", size =6, face = "bold"
) + theme_ipsum_pub() + scale_fill_ipsum()  -> p2
data %>%
ggplot() + aes(x=x,y=y, color =z) + geom_point(size=2, alpha=0.6) +
geom_smooth(se=F)+
labs(title = "Capturing the essence of Linear Regression", subtitle = "What about the error terms?")+ theme_ipsum_tw() + theme(axis.line = element_line(color="black")) + scale_color_ipsum() -> p1
(p1 | p2) / p2
wrap_elements((p1 | p2) / p2)
data = tibble(
x = rnorm(100,mean = 10, sd = 3),
y = 41 + x + rnorm(100, mean = 0, sd = 1),
z = sample(c("A","B","C","D"),100,T)
)
data %>%
ggplot() + aes(x=x,y=y, color =z) + geom_point(size=2, alpha=0.6) +
geom_smooth(se=F)+
labs(title = "Capturing the essence of Linear Regression", subtitle = "What about the error terms?")+ theme_ipsum_tw() + theme(axis.line = element_line(color="black")) + scale_color_ipsum() -> p1
# Chunk 1
#| echo: false
suppressPackageStartupMessages({
library(tidymodels)
library(tidyverse)
library(patchwork)
library(hrbrthemes)}
)
data = tibble(
x = rnorm(100,mean = 10, sd = 3),
y = 41 + x + rnorm(100, mean = 0, sd = 1),
z = sample(c("A","B","C","D"),100,T)
)
data %>%
ggplot() + aes(x=x,y=y, color =z) + geom_point(size=2, alpha=0.6) +
geom_smooth(se=F)+
labs(title = "Capturing the essence of Linear Regression", subtitle = "What about the error terms?")+ theme_ipsum_tw() + theme(axis.line = element_line(color="black")) + scale_color_ipsum() -> p1
p1
data
data = tibble(
x = rnorm(100,mean = 10, sd = 3),
z = rnorm(100, mean = 0, sd = 1)
y = 41 + x + z,
data = tibble(
x = rnorm(100,mean = 10, sd = 3),
z = rnorm(100, mean = 0, sd = 1),
y = 41 + x + z,
)
data
data = tibble(
x = rnorm(100,mean = 10, sd = 3),
z = rnorm(100, mean = 0, sd = 1),
y = 41 + x + 2*z,
)
data
data %>%
ggplot() + aes(x=x, y =y) + geom_point()
data %>%
ggplot() + aes(x=x, y =y) + geom_point() + theme_ipsum_pub()
?theme_ipsum
data %>%
ggplot() + aes(x=x, y =y) + geom_point() + theme_ipsum_pub(axis.line = element_text(color ="black"))
data %>%
ggplot() + aes(x=x, y =y) + geom_point() + theme_ipsum_pub() + theme(axis.line = element_text(color ="black"))
data %>%
ggplot() + aes(x=x, y =y) + geom_point() + theme_ipsum_pub(axis.line = element_line(color ="black"))
data %>%
ggplot() + aes(x=x, y =y) + geom_point() + theme_ipsum_pub() + theme(axis.line = element_line(color ="black"))
theme_set(theme_ipsum)
data %>%
ggplot() + aes(x=x, y =y) + geom_point()
theme_set(theme_ipsum())
data %>%
ggplot() + aes(x=x, y =y) + geom_point()
theme_set(theme_ipsum() + theme_ipsum_pub() + theme(axis.line = element_line(color ="black")))
theme_set(theme_ipsum() +theme(axis.line = element_line(color ="black")))
data %>%
ggplot() + aes(x=x, y =y) + geom_point()
?axis_title_just
??axis_title_just
theme_set(theme_ipsum(axis_title_just ="c" ) + theme(axis.line = element_line(color ="black")))
data %>%
ggplot() + aes(x=x, y =y) + geom_point()
?theme_ipsum
theme_set(theme_ipsum(axis_title_just ="c", axis_title_size = 13 ) + theme(axis.line = element_line(color ="black")))
data %>%
ggplot() + aes(x=x, y =y) + geom_point()
theme_set(theme_ipsum(axis_title_just ="c", axis_title_size = 15 ) + theme(axis.line = element_line(color ="black")))
data %>%
ggplot() + aes(x=x, y =y) + geom_point()
data %>%
ggplot() + aes(x=x, y =y) + geom_point() + geom_abline(intercept = 41, slope = 1)
data %>%
ggplot() + aes(x=x, y =y) + geom_point() + geom_abline(intercept = 41, slope = 1)
$$
advertising
rm(list=ls())
advertising
# Chunk 1
#| echo: false
suppressPackageStartupMessages({
library(tidymodels)
library(tidyverse)
library(patchwork)
library(hrbrthemes)}
)
advertising
read_csv("./data/Advertising.csv")
?read_csv
read_csv("./data/Advertising.csv", col_select = -"...1")
read_csv("./data/Advertising.csv", col_select = -1)
advertising = read_csv("./data/Advertising.csv", col_select = -1)
advertising
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising)
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit")
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
summary()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
summary()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment()
?augment
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
mutate(.resid_squared = .reisd^2)
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
mutate(.resid_squared = .resid^2)
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
mutate(.resid_squared = .resid^2) %>%
pluck(.resid_squared)
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
mutate(.resid_squared = .resid^2) %>%
pull(.resid_squared)
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
mutate(.resid_squared = .resid^2) %>%
pull(.resid_squared) %>% sum()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
summary()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
mutate(.resid_squared = .resid^2) %>%
pull(.resid_squared) %>% sum()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
mutate(.resid_squared = .resid^2) %>%
pull(.resid_squared) %>% sum()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point()
theme_set(theme_ipsum_ps(axis_text_size = 15) + theme(axis.line = element_line(color ="black")))
theme_set(theme_ipsum_ps(axis_text_size = 13) + theme(axis.line = element_line(color ="black")))
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point()
theme_set(theme_ipsum_ps(axis_text_size = 13, axis_title_just = "c") + theme(axis.line = element_line(color ="black")))
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point()
theme_set(theme_ipsum_ps(axis_text_size = 16, axis_title_just = "c") + theme(axis.line = element_line(color ="black")))
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point()
theme_set(theme_ipsum_ps(axis_title_size = 15 , axis_title_just = "c") + theme(axis.line = element_line(color ="black")))
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point()
theme_set(theme_ipsum_ps(axis_title_size = 13 , axis_title_just = "c") + theme(axis.line = element_line(color ="black")))
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point()
theme_set(theme_ipsum_ps(axis_title_size = 12 , axis_title_just = "c") + theme(axis.line = element_line(color ="black")))
theme_set(theme_ipsum_ps(axis_title_size = 11 , axis_title_just = "c") + theme(axis.line = element_line(color ="black")))
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit"
linear_reg() %>%
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising)
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") %>%
augment()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit")
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") -> lm_result
lm_result %>% summary()
lm_result %>% augment()
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") -> lm_result
lm_result %>% summary()
lm_result %>%
augment() %>%
mutate(.resid_squared = .resid^2) %>%
pull(.resid_squared) %>% sum()
lm_result %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point() + geom_abline(intercept = )
lm_result %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point() + geom_abline(intercept = lm_result[1] )
lm_result[1]
lm_result %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], intercept = lm_result$coefficients[2] )
lm_result %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2] )
lm_result %>%
augment() %>%
ggplot() + aes(x=sales, y = TV) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2])
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2])
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline()
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2])
hrbrthemes::ft_cols
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#617a89")
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1")
?geom_segment
lm_result
lm_result %>%
augment()
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1")+
geom_segment(aes(xend = TV, yend = .fitted))
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1")+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1", width = 2)+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1", linewidth =2)+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1", linewidth =1.4)+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1", linewidth =1.2)+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1", linewidth =1)+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1")+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1")+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1")+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
lm_result %>%
augment() %>%
mutate(.resid_squared = .resid^2) %>%
pull(.resid_squared) %>% sum()
#| fig-cap: For the advertising data, the least squares fit for the regression of sales onto TV. The fit is found by minimizing the sum of squared errors. Each red line segment represents a residual, and the fit make a comprimise by averaging their squares. In this case a linear fit captures the essence of the relationship, although it is somewhat deficient in the left of the plot
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1")+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
# Chunk 1
#| echo: false
suppressPackageStartupMessages({
library(tidymodels)
library(tidyverse)
library(patchwork)
library(hrbrthemes)}
)
theme_set(theme_ipsum_ps(axis_title_size = 11 , axis_title_just = "c") + theme(axis.line = element_line(color ="black")))
# Chunk 2
advertising = read_csv("./data/Advertising.csv", col_select = -1)
advertising
# Chunk 3
linear_reg() %>%
set_mode("regression") %>%
set_engine("lm") %>%
fit(sales ~ TV, advertising) %>%
pluck("fit") -> lm_result
lm_result %>% summary()
# Chunk 4
lm_result %>% augment()
# Chunk 5
lm_result %>%
augment() %>%
mutate(.resid_squared = .resid^2) %>%
pull(.resid_squared) %>% sum()
#| fig-cap: For the advertising data, the least squares fit for the regression of sales onto TV. The fit is found by minimizing the sum of squared errors. Each red line segment represents a residual, and the fit make a comprimise by averaging their squares. In this case a linear fit captures the essence of the relationship, although it is somewhat deficient in the left of the plot
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1")+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
warnings()
#| fig-cap: For the advertising data, the least squares fit for the regression of sales onto TV. The fit is found by minimizing the sum of squared errors. Each red line segment represents a residual, and the fit make a comprimise by averaging their squares. In this case a linear fit captures the essence of the relationship, although it is somewhat deficient in the left of the plot
lm_result %>%
augment() %>%
ggplot() + aes(x=TV, y = sales) + geom_point() + geom_abline(intercept = lm_result$coefficients[1], slope = lm_result$coefficients[2], color ="#0b53c1")+
geom_segment(aes(xend = TV, yend = .fitted), color = "#ff0055")
