sum((advertising$sales - y_hat_adv)^2)
RSE
RSS
RSS = sum((advertising$sales - y_hat_adv)^2)
RSE = sqrt((RSS / (length(advertising$sales -2))))
RSE
RSE
beta_0_hat_adv
beta_1_hat_adv
(1 / length(advertising$sales))
(1 / length(advertising$sales)) + (mean(advertising$TV))
(mean(advertising$TV))
(1 / length(advertising$sales)) + (mean(advertising$TV) / sum((advertising$TV - mean(advertising$TV)^2)))
se_beta_1_adv = RSE^2 * (1 / length(advertising$sales)) + (mean(advertising$TV) / sum((advertising$TV - mean(advertising$TV)^2)))
se_beta_1_adv
beta_1_hat_adv * 2 * se_beta_1_adv
confint(lm(sales ~ TV, advertising))
se_beta_1_adv = RSE^2 * (1 / length(advertising$sales)) + ((mean(advertising$TV) / sum((advertising$TV - mean(advertising$TV)^2))))
se_beta_1_adv
beta_1_hat_adv * 2 * se_beta_1_adv
confint(lm(sales ~ TV, advertising), level = 0.95)
confint(lm(sales ~ TV, advertising), level = 0.90)
beta_1_hat_adv * 2 * se_beta_1_adv
beta_1_hat_adv
se_beta_1_adv
lm(sales~TV, advertising)
summary(lm(sales~TV, advertising))
RSE
RSS
RSS / length(advertising$sales)
se_beta_1_adv
RSE
RSE = sqrt((RSS / (length(advertising$sales) -2)))
RSE
se_beta_1_adv = RSE^2 * (1 / length(advertising$sales)) + ((mean(advertising$TV) / sum((advertising$TV - mean(advertising$TV)^2))))
beta_1_hat_adv * 2 * se_beta_1_adv
RSE
mean(advertising$TV)^2
advertising$TV - mean(advertising$TV)
(advertising$TV - mean(advertising$TV))^2
sum((advertising$TV - mean(advertising$TV))^2)
mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2)
1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2))
RSE^2 * (1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2)))
RSE * (1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2)))
RSE^2 * (1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2)))
beta_1_hat_adv * 2 * RSE^2 * (1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2)))
(1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2)))
(mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2)))
(mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2)))
(mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2))
(mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
(mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
(1/length(advertising$sales) + (mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
(1/length(advertising$sales) + (mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
(1/length(advertising$sales)) + (mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
(1/length(advertising$sales)) + (mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
(1/length(advertising$sales)) + (mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
(1/length(advertising$sales)) + (mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
(1/length(advertising$sales)) + (mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
(1/length(advertising$sales)) + (mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
((1/length(advertising$sales)) + (mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))) * RSE^2
summary(lm(sales~TV, advertising))
((1/length(advertising$sales)) + (mean(advertising$TV)^2 / (sum((advertising$TV - mean(advertising$TV))^2)))) * RSE^2
((1/length(advertising$sales)) + ((mean(advertising$TV)^2) / (sum((advertising$TV - mean(advertising$TV))^2)))) * RSE^2
((1/length(advertising$sales)) + ((mean(advertising$TV)^2) / (sum((advertising$TV - mean(advertising$TV))^2)))) * RSE
((1/length(advertising$sales)) + ((mean(advertising$TV)^2) / (sum((advertising$TV - mean(advertising$TV))^2)))) * RSS^2
((1/length(advertising$sales)) + ((mean(advertising$TV)^2) / (sum((advertising$TV - mean(advertising$TV))^2)))) * RSE^2
(RSE^2)/(sum((advertising$TV - mean(advertising$TV))^2))
(sum((advertising$TV - mean(advertising$TV))^2))
(RSE^2)
(RSE^2)/(sum((advertising$TV - mean(advertising$TV))^2))
RSS = sum((advertising$sales - y_hat_adv)^2)
RSS
RSE = sqrt((RSS / (length(advertising$sales) -2)))
RSE
lm(sales ~ TV, advertising)
summary(lm(sales ~ TV, advertising))
mean(advertising$TV)^2
sum((advertising$TV - mean(advertising$TV))^2)
mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2)
(mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2))
1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2))
RSE^2 * (1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2)))
sqrt(RSE^2 * (1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2))))
se_beta_0_adv =  sqrt(RSE^2 * (1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2))))
se_beta_0_adv
beta_0_hat_adv - 2 * se_beta_0_adv
beta_0_hat_adv + 2 * se_beta_0_adv
confint(lm(sales~TV,advertising))
beta_0_hat_adv - 2 * se_beta_0_adv
confint(lm(sales~TV,advertising), level = 0.9)
beta_0_hat_adv - 2 * se_beta_0_adv
beta_0_hat_adv - 2 * se_beta_0_adv
beta_0_hat_adv + 2 * se_beta_0_adv
beta_0_hat_adv - 2 * se_beta_0_adv
beta_0_hat_adv + 2 * se_beta_0_adv
beta_0_hat_adv - 1.98 * se_beta_0_adv
beta_0_hat_adv - 1.96 * se_beta_0_adv
beta_0_hat_adv + 1.96 * se_beta_0_adv
beta_0_hat_adv - 1.96 * se_beta_0_adv
beta_0_hat_adv + 1.96 * se_beta_0_adv
print(beta_0_hat_adv - 1.96 * se_beta_0_adv,
beta_0_hat_adv + 1.96 * se_beta_0_adv)
$beta_0_hat_adv + 1.96 * se_beta_0_adv"
"$(beta_0_hat_adv - 1.96 * se_beta_0_adv),
print(beta_0_hat_adv - 1.96 * se_beta_0_adv),
beta_0_hat_adv + 1.96 * se_beta_0_adv)
beta_0_hat_adv - 1.96 * se_beta_0_adv
beta_0_hat_adv + 1.96 * se_beta_0_adv
beta_0_hat_adv - 1.96 * se_beta_0_adv
beta_0_hat_adv + 1.96 * se_beta_0_adv
print(beta_0_hat_adv - 1.96 * se_beta_0_adv)
print(beta_0_hat_adv + 1.96 * se_beta_0_adv)
print(beta_0_hat_adv - 1.96 * se_beta_0_adv)
print(beta_0_hat_adv + 1.96 * se_beta_0_adv)
print(beta_0_hat_adv - 1.96 * se_beta_0_adv,"r")
print(beta_0_hat_adv - 1.96 * se_beta_0_adv)
print(beta_0_hat_adv + 1.96 * se_beta_0_adv)
paste(beta_0_hat_adv - 1.96 * se_beta_0_adv, "h")
cat(beta_0_hat_adv - 1.96 * se_beta_0_adv)
cat("In the absence of any advertising, sales will on average, fall somewhere between"beta_0_hat_adv - 1.96 * se_beta_0_adv, "and", print(beta_0_hat_adv + 1.96 * se_beta_0_adv))
cat("In the absence of any advertising, sales will on average, fall somewhere between",beta_0_hat_adv - 1.96 * se_beta_0_adv, "and", print(beta_0_hat_adv + 1.96 * se_beta_0_adv))
cat("In the absence of any advertising, sales will on average, fall somewhere between",beta_0_hat_adv - 1.96 * se_beta_0_adv, "and", print(beta_0_hat_adv + 1.96 * se_beta_0_adv))
message("In the absence of any advertising, sales will on average, fall somewhere between",beta_0_hat_adv - 1.96 * se_beta_0_adv, "and", print(beta_0_hat_adv + 1.96 * se_beta_0_adv))
cat
cat("In the absence of any advertising, sales will on average, fall somewhere between",beta_0_hat_adv - 1.96 * se_beta_0_adv, "and", print(beta_0_hat_adv + 1.96 * se_beta_0_adv))
cat("In the absence of any advertising, sales will on average, fall somewhere between",beta_0_hat_adv - 1.96 * se_beta_0_adv, "and", print(beta_0_hat_adv + 1.96 * se_beta_0_adv)
cat("In the absence of any advertising, sales will on average, fall somewhere between",beta_0_hat_adv - 1.96 * se_beta_0_adv, "and", beta_0_hat_adv + 1.96 * se_beta_0_adv))
cat("In the absence of any advertising, sales will on average, fall somewhere between",beta_0_hat_adv - 1.96 * se_beta_0_adv, "and", beta_0_hat_adv + 1.96 * se_beta_0_adv))
cat("In the absence of any advertising, sales will on average, fall somewhere between",beta_0_hat_adv - 1.96 * se_beta_0_adv, "and", beta_0_hat_adv + 1.96 * se_beta_0_adv)
RSE
RSE^2 / (sum((advertising$TV - mean(advertising$TV))^2))
sqrt(RSE^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
summary(lm(sales ~ TV, advertising))
sqrt(RSE^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
se_beta_1_adv = sqrt(RSE^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
se_beta_1_adv = sqrt(RSE^2 / (sum((advertising$TV - mean(advertising$TV))^2)))
se_beta_1_adv
se_beta_0_adv =  sqrt(RSE^2 * (1/length(advertising$sales) + (mean(advertising$TV)^2 / sum((advertising$TV - mean(advertising$TV))^2))))
se_beta_0_adv
beta_1_hat_adv - 1.96 * se_beta_1_adv
cat("For each $1,000 increase in TV advertising, average increase in sales will be between",beta_1_hat_adv - 1.96 * se_beta_1_adv)
cat("For each $1,000 increase in TV advertising, average increase in sales will be between",beta_1_hat_adv - 1.96 * se_beta_1_adv, "and", beta_1_hat_adv + 1.96 * se_beta_1_adv)
cat("For each $1,000 increase in TV advertising, average increase in sales will be between",beta_1_hat_adv - 1.96 * se_beta_1_adv, "and", beta_1_hat_adv + 1.96 * se_beta_1_adv, "by 95% confidence")
summary(lm(sales ~ TV, advertising))
confint((lm(sales ~ TV, advertising))
confint((lm(sales ~ TV, advertising))
confint((lm(sales ~ TV, advertising))
confint((lm(sales ~ TV, advertising)
confint((lm(sales ~ TV, advertising)
confint(lm(sales ~ TV, advertising))
confint(lm(sales ~ TV, advertising))
cat("For each $1,000 increase in TV advertising, average increase in sales will be between",beta_1_hat_adv - 1.96 * se_beta_1_adv, "and", beta_1_hat_adv + 1.96 * se_beta_1_adv, "by 95% confidence")
confint(lm(sales ~ TV, advertising), level = 0.95)
confint(lm(sales ~ TV, advertising), level = 0.90)
confint(lm(sales ~ TV, advertising))
cat("For each $1,000 increase in TV advertising, average increase in sales will be between",beta_1_hat_adv - 1.96 * se_beta_1_adv, "and", beta_1_hat_adv + 1.96 * se_beta_1_adv, "by 95% confidence")
cat("For each $1,000 increase in TV advertising, average increase in sales will be between",beta_1_hat_adv - 1.96 * se_beta_1_adv * 1000, "and", beta_1_hat_adv + 1.96 * se_beta_1_adv, "by 95% confidence")
cat("For each $1,000 increase in TV advertising, average increase in sales will be between",(beta_1_hat_adv - 1.96 * se_beta_1_adv) * 1000, "and", beta_1_hat_adv + 1.96 * se_beta_1_adv, "by 95% confidence")
cat("For each $1,000 increase in TV advertising, average increase in sales will be between",(beta_1_hat_adv - 1.96 * se_beta_1_adv) * 1000, "and", (beta_1_hat_adv + 1.96 * se_beta_1_adv)*1000, "by 95% confidence")
summary(lm(sales ~ TV, advertising))
cat("For each $1,000 increase in TV advertising, average increase in sales will be between",(beta_1_hat_adv - 1.96 * se_beta_1_adv) * 1000, "and", (beta_1_hat_adv + 1.96 * se_beta_1_adv)*1000, "by 95% confidence")
Lets do this for our `data` as well
data
lm(y~x,data)
beta_1_hat_data = sum((data$x - mean(data$x)) * (data$y - mean(data$y))) / (data$x - mean(data$x))^2
beta_1_hat_data
beta_1_hat_data = sum((data$x - mean(data$x)) * (data$y - mean(data$y))) / sum((data$x - mean(data$x))^2)
beta_1_hat_data
lm(y~x,data)
beta_1_hat_data
beta_0_hat_data = mean(data$y) - beta_1_hat_data * mean(data$x)
beta_0_hat_data
beta_0_hat_data
lm(y~x, data)
data
data %>%
mutate(
y_hat = beta_0_hat_data + beta_1_hat_data * x
)
data
data %>%
mutate(
y_hat = beta_0_hat_data + beta_1_hat_data * x
) -> data
data
RSS_data = (data$y - data$y_hat)^2
RSS_data
RSS_data = sum((data$y - data$y_hat)^2)
RSS_data
RSS_data
RSE_data = sqrt((RSS/length(data$y)))
RSE_data
RSE_data
summary(lm(y~x,data))
RSE_data
summary(lm(y~x,data))
data
data %>%
ggplot() + aes(x=x,y=y) + geom_point() + geom_abline(intercept = beta_0_hat_data, slope = beta_1_hat_data)
RSS_data
RSE_data = sqrt((RSS/length(data$y)))
RSE_data
RSE_data = sqrt((RSS/(length(data$y)-2))
RSE_data
RSE_data = sqrt((RSS/(length(data$y)-2))
RSE_data = sqrt((RSS/(length(data$y)-2)))
RSE_data
RSS_data
RSS_data = sum((data$y - data$y_hat)^2)
RSS_data
RSS/(length(data$y) -2)
sqrt(RSS/(length(data$y) -2))
summary(lm(y~x,data))
RSS_data
lm(y~x,data)$errors
names(lm(y~x,data))
lm(y~x,data)$residuals
sum(lm(y~x,data)$residuals)
sum(lm(y~x,data)$residuals^2)
RSS_data = sum((data$y - data$y_hat)^2)
RSS_data
sqrt(RSS/(length(data$y) -2))
RSS/(length(data$y) -2)
sqrt(RSS/(length(data$y) -2))
lm(y~x,data)
summary(lm(y~x,data))
names(lm(y~x,data))
lm(y~x,data)$`df.residual`
lm(y~x,data)$`xlevels`
lm(y~x,data)$`xlevels`[1]
sqrt(RSS/(length(data$y) -2))
sqrt((RSS/(length(data$y) -2)))
RSS_data
RSS_data
sqrt(RSS/(length(data$y) -2))
sqrt((RSS/(length(data$y) -2)))
sumary(y~x,data)
lm(y~x,data)
summary(lm(y~x,data))
sqrt((RSS_data/(length(data$y) -2)))
RSE_data
RSE_data = sqrt((RSS_data/(length(data$y) -2)))
RSE_data
data$x
mean(data$x)
mean(data$x)^2
mean(data$x)^2 / sum((data$x - mean(data$x))^2)
(1/length(data$y)) + (mean(data$x)^2 / sum((data$x - mean(data$x))^2))
((1/length(data$y)) + (mean(data$x)^2 / sum((data$x - mean(data$x))^2))) * RSE_data^2
summary(lm(y~x,data))
((1/length(data$y)) + (mean(data$x)^2 / sum((data$x - mean(data$x))^2))) * RSE_data^2
RSE_data^2 / (sum((data$x - mean(data$x))^2))
sqrt(((1/length(data$y)) + (mean(data$x)^2 / sum((data$x - mean(data$x))^2))) * RSE_data^2)
summary(lm(y~x,data))
sqrt(((1/length(data$y)) + (mean(data$x)^2 / sum((data$x - mean(data$x))^2))) * RSE_data^2)
RSE_data^2 / (sum((data$x - mean(data$x))^2))
sqrt(RSE_data^2 / (sum((data$x - mean(data$x))^2)))
se_beta_0_data
se_beta_0_data = sqrt(((1/length(data$y)) + (mean(data$x)^2 / sum((data$x - mean(data$x))^2))) * RSE_data^2)
se_beta_0_data
se_beta_0_data
se_beta_1_datas = qrt(RSE_data^2 / (sum((data$x - mean(data$x))^2)))
se_beta_1_data
se_beta_1_data = qrt(RSE_data^2 / (sum((data$x - mean(data$x))^2)))
se_beta_1_data
se_beta_1_data = qrt(RSE_data^2 / (sum((data$x - mean(data$x))^2)))
se_beta_1_data
se_beta_1_data = qrt(RSE_data^2 / (sum((data$x - mean(data$x))^2)))
se_beta_1_data = sqrt(RSE_data^2 / (sum((data$x - mean(data$x))^2)))
se_beta_1_data
cat("By %95 confidence we can say that the true beta_0 is between", beta_0_hat_data - 1.96 * se_beta_0_data, "and", beta_0_hat_data + 1.96 * se_beta_0_data )
cat("By 95% confidence we can say that the true beta_0 is between", beta_1_hat_data - 1.96 * se_beta_1_data, "and", beta_1_hat_data + 1.96 * se_beta_1_data)
confint(lm(y~x,data))
lm(sales ~ TV, data)
lm(sales ~ TV, advertising)
summary(lm(sales ~ TV, advertising))
advertising
advertising %>%
mutate(sales_hat = beta_0_hat_adv + beta_1_hat_adv * TV)
advertising %>%
mutate(sales_hat = beta_0_hat_adv + beta_1_hat_adv * TV) -> advertising
advertising
RSS
RSS = sum((advertising$sales - advertising$sales_hat)^2)
RSS
RSE
RSE = sqrt(RSS/(length(advertising$sales) -2))
RSE
TSS = sum(advertising$sales - mean(advertising$sales))
TSS
R2 = (TSS - RSS) / TSS
R2
advertising$sales
mean(advertising$sales)
advertising$sales - mean(advertising$sales)
TSS = sum((advertising$sales - mean(advertising$sales))^2)
TSS
R2 = (TSS - RSS) / TSS
R2
data
data
RSS_data = sum((data$y - data$y_hat)^2)
RSS_data
RSE_data
RSE_data = RSS_data/(lenght(data$y) -2)
RSE_data
RSE_data = RSS_data/(length(data$y) -2)
RSE_data
lm(y~x, data)
summary(lm(y~x, data))
RSS_data = sum((data$y - data$y_hat)^2)
RSS_data
RSE_data = RSS_data/(length(data$y) -2)
RSE_data
RSE_data = sqrt(RSS_data/(length(data$y) -2))
RSE_data
TSS_data = sum((data$y - mean(data$y))^2)
TSS_data
R2_data = (TSS_data - RSS_data) / TSS_data
R2_data
summary(lm(y~x,data))
R2_data
R2_data
RSE_data
mean(data$y)
RSE_data
lm(sales ~ TV, advertising)
summary(lm(sales ~ TV, advertising))
summary(lm(sales ~ radio, advertising))
summary(lm(sales ))
summary(lm(sales ~ newspaper, advertising))
summary(lm(sales ~ TV, advertising))
sample(seq(-10,10,length.out = 100),100)
set.seed(4)
tibble(
x1 = sample(seq(-90,51,length.out = 100),100),
x2 = sample(seq(-10,10,length.out = 100),100)
)
tibble(
x1 = sample(seq(-90,51,length.out = 100),100),
x2 = sample(seq(-10,10,length.out = 100),100),
y = 10 + 2.5x1 + 4.14x2 + rnorm(n= 100,mean=5, sd=2)
tibble(
x1 = sample(seq(-90,51,length.out = 100),100),
x2 = sample(seq(-10,10,length.out = 100),100),
y = 10 + 2.5 * x1 + 4.14 * x2 + rnorm(n= 100,mean=5, sd=2)
)
data_2 =tibble(
x1 = sample(seq(-90,51,length.out = 100),100),
x2 = sample(seq(-10,10,length.out = 100),100),
y = 10 + 2.5 * x1 + 4.14 * x2 + rnorm(n= 100,mean=5, sd=2)
) %>% select(y,x1,c2)
data_2 =tibble(
x1 = sample(seq(-90,51,length.out = 100),100),
x2 = sample(seq(-10,10,length.out = 100),100),
y = 10 + 2.5 * x1 + 4.14 * x2 + rnorm(n= 100,mean=5, sd=2)
) %>% select(y,x1,x2)
data_2
data_2
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point()
data_2 =tibble(
x1 = sample(seq(-90,51,length.out = 100),100),
x2 = sample(seq(-1,10,length.out = 100),100),
y = 10 + 2.5 * x1 + 4.14 * x2 + rnorm(n= 100,mean=5, sd=2)
) %>% select(y,x1,x2)
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point()
data_2 =tibble(
x1 = sample(seq(-90,51,length.out = 100),100),
x2 = sample(seq(-100,10,length.out = 100),100),
y = 10 + 2.5 * x1 + 4.14 * x2 + rnorm(n= 100,mean=5, sd=2)
) %>% select(y,x1,x2)
data_2
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point()
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point()
plot(lm(y~x1),data_2)
plot(lm(y~x1,data_2)))
plot(lm(y~x1,data_2))
lm(y~x1,data_2)
lm(y~x1,data_2)$coefficients
lm(y~x1,data_2)$coefficients[1]
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point()
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2])
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2], "red")
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2],color = "red")
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2])
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2])
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2])+
geom_abline(intercept = lm(y~x2,data_2)$coeffcients[1], slope = lm(y~x2, data_2)$coefficients[2])
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2])
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x2,data_2)$coeffcients[1], slope = lm(y~x2, data_2)$coefficients[2])
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2])+
geom_abline(intercept = lm(y~x2,data_2)$coefficients[1], slope = lm(y~x2, data_2)$coefficients[2])
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2])+
geom_abline(intercept = lm(y~x2,data_2)$coefficients[1], slope = lm(y~x2, data_2)$coefficients[2], color = "blue")
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2], color = "darkblue")+
geom_abline(intercept = lm(y~x2,data_2)$coefficients[1], slope = lm(y~x2, data_2)$coefficients[2], color = "blue")
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2], color = "darkblue")+
geom_abline(intercept = lm(y~x2,data_2)$coefficients[1], slope = lm(y~x2, data_2)$coefficients[2], color = "blue") +
geom_smooth(method ="ols")
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2], color = "darkblue")+
geom_abline(intercept = lm(y~x2,data_2)$coefficients[1], slope = lm(y~x2, data_2)$coefficients[2], color = "blue") +
geom_smooth(method ="lm")
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2], color = "darkblue")+
geom_abline(intercept = lm(y~x2,data_2)$coefficients[1], slope = lm(y~x2, data_2)$coefficients[2], color = "blue") +
geom_smooth(method ="lm", formula = "y~x1 + x2")
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2], color = "darkblue")+
geom_abline(intercept = lm(y~x2,data_2)$coefficients[1], slope = lm(y~x2, data_2)$coefficients[2], color = "blue") +
geom_smooth(method ="nls", formula = "y~x1 + x2")
data_2 %>%
ggplot() + aes(x=x1,y=y) + geom_point() +
geom_abline(intercept = lm(y~x1,data_2)$coefficients[1], slope = lm(y~x1,data_2)$coefficients[2], color = "darkblue")+
geom_abline(intercept = lm(y~x2,data_2)$coefficients[1], slope = lm(y~x2, data_2)$coefficients[2], color = "blue") +
geom_smooth()
lm(sales ~ TV + radio + newspaper, advertising)
summary(lm(sales ~ TV + radio + newspaper, advertising))
library(latexify)
install.packages("latexify")
library(latexify)
summary(lm(sales ~ TV + radio + newspaper, advertising))
confint(lm(sales ~ TV + radio + newspaper),advertising)
confint(lm(sales ~ TV + radio + newspaper, advertising))
cor(advertising)
cor(advertising[-"sales_hat"])
cor(advertising[-sales_hat])
cor(advertising[1:4])
summary(lm(sales ~ TV + radio + newspaper))
summary(lm(sales ~ TV + radio + newspaper, advertising))
lm(sales ~ , advertising)
lm(sales ~ 1, advertising)
summary(lm(sales ~ TV + radio + newspaper, advertising))
summary(lm(sales ~ TV + radio))
summary(lm(sales ~ TV + radio, advertising))
summary(lm(sales ~ TV))
summary(lm(sales ~ TV, advertising))
names(lm(sales ~ TV, advertising))
summary(lm(sales ~ TV, advertising))
summary(lm(sales ~ TV + radio, advertising))
summary(lm(sales ~ TV + newspaper, advertising))
summary(lm(sales ~ TV, advertising))
summary(lm(sales ~ TV + newspaper, advertising))
summary(lm(sales ~ radio, advertising))
summary(lm(sales~radio+TV, advertising))
summary(lm(sales ~ radio + newspaper))
summary(lm(sales ~ radio + newspaper, advertising))
summary(lm(sales ~ radio, advertising))
summary(lm(sales ~ radio + newspaper, advertising))
summary(lm(sales ~ TV + radio, advertising))
summary(lm(sales ~ TV + radio + newspaper, advertising))
install.packages("corrgram")
install.packages("corrplot")
library(corrgram)
library(corrplot)
cor(advertising[1:4])
corrplot::corrplot(advertising[1:4])
corrplot::corrplot(advertising)
sapply(advertising, is.numeric)
advertising[:,sapply(advertising, is.numeric)]
sapply(advertising, is.numeric)
advertising[:,(sapply(advertising, is.numeric))]
advertising[,sapply(advertising, is.numeric)]
corrplot::corrplot(advertising[,sapply(advertising, is.numeric)])
corrplot(advertising, methdo = "color")
corrplot(advertising, methdo = "colors")
?coorplot
?corrplot
cor(advertising[1:4])
corrplot(cor(advertising[1:4]), methdo = "colors")
corrplot(cor(advertising[1:4]), method = "colors")
corrplot(cor(advertising[1:4]))
corrplot(cor(advertising[1:4]), method = "color")
corrplot(cor(advertising[1:4]), method = "number")
corrplot(cor(advertising[1:4]), method = "number")
corrgram(cor(advertising[1:4]))
?corrgram
corrgram(cor(advertising[1:4]), order = T, lower.panel = panel.shade, upper.panel = panel.pie, text.panel = panel.txt)
